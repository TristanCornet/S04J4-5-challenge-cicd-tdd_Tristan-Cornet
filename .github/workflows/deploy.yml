name: Deploy to GitHub Pages

# déclenche le déploiement à chaque push
on:
  workflow_dispatch: # permet de déclencher le workflow manuellement à partir de l'interface GitHub
  push: # déclenche le workflow à chaque fois qu'un commit est poussé vers le référentiel
    branches: "main" # limite le déclenchement du workflow aux modifications effectuées sur la branche principale (main)

# définition des permissions et autorisations afin de permettre le déploiement sur github pages
permissions:
  contents: read # donne la permission de lire le contenu du référentiel
  pages: write # indique une autorisation d'écriture pour GitHub Pages
  id-token: write # spécifie une autorisation d'écriture pour un jeton d'identification

# autorise un déploiement à la fois
concurrency: # spécifie les paramètres de concurrence pour les jobs d'un workflow
  group: "pages" # crée un groupe de concurrence nommé "pages". Les jobs inclus dans ce groupe ne pourront pas s'exécuter simultanément avec d'autres jobs du même groupe
  cancel-in-progress: true # signifie que si un job du groupe "pages" est déjà en cours d'exécution et qu'un nouveau travail est déclenché, le travail en cours sera annulé pour permettre au nouveau travail de commencer
jobs:
  build: # pas une convention  
    environment: production # suggère que ces actions sont destinées à être exécutées dans un environnement de production
    runs-on: ubuntu-latest # indique que les actions seront exécutées sur une machine virtuelle avec la dernière version d'Ubuntu
    defaults:
      run: # définit des paramètres par défaut pour les actions, comme le shell à utiliser (bash) et le répertoire de travail par défaut (./app)
        shell: bash 
        working-directory: ./app
    steps:
      # fetch code
      - name: Checkout : #  Cette étape utilise l'action actions/checkout@v3 pour récupérer le code source du référentiel. Cela prépare l'environnement de travail en fournissant le code qui sera utilisé dans les étapes suivantes
        uses: actions/checkout@v3
      # installation des librairies
      - name: Install dependencies # Cette étape installe les dépendances du projet à l'aide de la commande npm ci. C'est courant dans les projets JavaScript/Node.js pour s'assurer que les dépendances sont installées de manière cohérente
        run: npm ci
      # build website
      - name: Build # Cette étape exécute la commande npm run build pour construire le site ou l'application. Cela peut inclure la compilation des fichiers source, la minification, et d'autres tâches nécessaires pour préparer le code pour le déploiement
        run: npm run build
      # upload artifact
      - name: Upload artifact # Cette étape utilise l'action actions/upload-pages-artifact@v2.0.0 pour téléverser un artefact généré lors de l'étape précédente. L'artefact est le résultat de la construction, dans ce cas, il est situé dans le répertoire ./app/dist. Cet artefact peut ensuite être utilisé dans d'autres workflows ou jobs
        uses: actions/upload-pages-artifact@v2.0.0
        with:
          path: ./app/dist
          name: artifact
  # deploy to github pages
  deploy:
    runs-on: ubuntu-latest # indique que ces étapes seront exécutées sur une machine virtuelle avec la dernière version d'Ubuntu
    needs: build # spécifie que ce job a besoin du job nommé "build" (probablement défini dans le même workflow) pour être exécuté avec succès avant de commencer ce job de déploiement
    environment:
      name: github-pages # définit un environnement nommé "github-pages" avec une URL récupérée à partir de la sortie de l'étape de déploiement précédente
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Configure GitHub Pages # utilise l'action actions/configure-pages@v3.0.6 pour configurer GitHub Pages, probablement en utilisant les informations de l'environnement
        uses: actions/configure-pages@v3.0.6
        id: pages
      - name: Deploy GitHub Pages site # utilise l'action actions/deploy-pages@v1.2.9 pour effectuer le déploiement proprement dit. Elle utilise l'artefact nommé "artifact" (qui a été téléversé dans le job précédent) pour déployer le site GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9
        with:
          artifact_name: artifact